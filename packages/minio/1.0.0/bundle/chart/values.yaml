#@data/values
---


global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: ""
nameOverride: ""
fullnameOverride: ""
commonLabels: {}
commonAnnotations: {}
kubeVersion: ""
clusterDomain: cluster.local
extraDeploy: []
image:
  registry: gcr.io
  repository: sys-2b0109it/demo/bitnami/minio
  tag: 2022.2.16-centos-7-r0
  pullPolicy: IfNotPresent
  pullSecrets: []
  debug: false
clientImage:
  registry: gcr.io
  repository: sys-2b0109it/demo/bitnami/minio-client
  tag: 2022.2.7-centos-7-r9
mode: standalone
auth:
  rootUser: admin
  rootPassword: ""
  existingSecret: ""
  forcePassword: false
  useCredentialsFiles: false
  forceNewKeys: false
defaultBuckets: backup
disableWebUI: false
tls:
  enabled: false
  existingSecret: ""
  mountPath: ""
extraEnvVars: {}
extraEnvVarsCM: ""
extraEnvVarsSecret: ""
command: []
args: []
schedulerName: ""
deployment:
  updateStrategy:
    type: Recreate
statefulset:
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  replicaCount: 4
  zones: 1
  drivesPerNode: 1
provisioning:
  enabled: false
  schedulerName: ""
  podAnnotations: {}
  command: []
  args: []
  extraVolumes: []
  extraVolumeMounts: []
  resources:
    limits: {}
    requests: {}
  users: []
  groups: []
  buckets: []
  config: []
hostAliases: []
containerPorts:
  api: 9000
  console: 9001
podSecurityContext:
  enabled: true
  fsGroup: 1001
containerSecurityContext:
  enabled: true
  runAsUser: 1001
  runAsNonRoot: true
podLabels: {}
podAnnotations: {}
podAffinityPreset: ""
podAntiAffinityPreset: soft
nodeAffinityPreset:
  type: ""
  key: ""
  values: []
affinity: {}
nodeSelector: {}
tolerations: []
topologySpreadConstraints: []
priorityClassName: ""
resources:
  limits: {}
  requests: {}
livenessProbe:
  enabled: true
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 5
readinessProbe:
  enabled: true
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 5
startupProbe:
  enabled: false
  initialDelaySeconds: 0
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 60
customLivenessProbe: {}
customReadinessProbe: {}
customStartupProbe: {}
lifecycleHooks: {}
extraVolumes: []
extraVolumeMounts: []
initContainers: []
sidecars: []
service:
  type: LoadBalancer
  ports:
    api: 9000
    console: 9001
  nodePorts:
    api: ""
    console: ""
  clusterIP: ""
  loadBalancerIP: ""
  loadBalancerSourceRanges: []
  externalTrafficPolicy: Cluster
  extraPorts: []
  annotations: {}
ingress:
  enabled: false
  apiVersion: ""
  ingressClassName: ""
  hostname: minio.local
  path: /
  pathType: ImplementationSpecific
  servicePort: minio-console
  annotations: {}
  tls: false
  selfSigned: false
  extraHosts: []
  extraPaths: []
  extraTls: []
  secrets: []
apiIngress:
  enabled: false
  apiVersion: ""
  ingressClassName: ""
  hostname: minio.local
  path: /
  pathType: ImplementationSpecific
  servicePort: minio-api
  annotations: {}
  tls: false
  selfSigned: false
  extraHosts: []
  extraPaths: []
  extraTls: []
  secrets: []
networkPolicy:
  enabled: false
  allowExternal: true
  extraFromClauses: {}
persistence:
  enabled: true
  storageClass: ""
  mountPath: /data
  accessModes:
  - ReadWriteOnce
  size: 8Gi
  annotations: {}
  existingClaim: ""
volumePermissions:
  enabled: false
  image:
    registry: gcr.io
    repository: sys-2b0109it/demo/bitnami/tac-shell
    tag: "7"
    pullPolicy: IfNotPresent
    pullSecrets: []
  resources:
    limits: {}
    requests: {}
  containerSecurityContext:
    runAsUser: 0
serviceAccount:
  create: true
  name: ""
  automountServiceAccountToken: true
  annotations: {}
pdb:
  create: false
  minAvailable: 1
  maxUnavailable: ""
metrics:
  prometheusAuthType: public
  serviceMonitor:
    enabled: false
    namespace: ""
    labels: {}
    jobLabel: ""
    path: /minio/v2/metrics/cluster
    interval: 30s
    scrapeTimeout: ""
    metricRelabelings: []
    relabelings: []
    honorLabels: false
    selector: {}
gateway:
  enabled: false
  type: s3
  replicaCount: 4
  updateStrategy:
    type: Recreate
  autoscaling:
    enabled: false
    minReplicas: "4"
    maxReplicas: "4"
    targetCPU: ""
    targetMemory: ""
  priorityClassName: ""
  auth:
    azure:
      accessKey: ""
      secretKey: ""
      serviceEndpoint: ""
      storageAccountName: ""
      storageAccountKey: ""
      storageAccountNameExistingSecret: ""
      storageAccountNameExistingSecretKey: ""
      storageAccountKeyExistingSecret: ""
      storageAccountKeyExistingSecretKey: ""
    gcs:
      accessKey: ""
      secretKey: ""
      keyJSON: ""
      projectID: ""
    nas:
      accessKey: ""
      secretKey: ""
    s3:
      accessKey: ""
      secretKey: ""
      serviceEndpoint: https://s3.amazonaws.com
chartInfo:
  appVersion: 2022.2.16
